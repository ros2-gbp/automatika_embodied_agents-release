#!/usr/bin/env python3
import uvicorn
from pathlib import Path
import os
import sys
import argparse


def main():
    """
    Launches the FastAPI-based web client for EmbodiedAgents.
    This script is intended to be run via `ros2 run`.
    """
    # parse arguments
    parser = argparse.ArgumentParser(
        description="Launch the EmbodiedAgents web client.",
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    )
    parser.add_argument(
        "--host",
        type=str,
        default="0.0.0.0",  # Bind to all addresses
        help="The host IP address to bind the server to.",
    )
    parser.add_argument(
        "--port", type=int, default=8080, help="The port to run the server on."
    )
    args = parser.parse_args()

    try:
        # Get the directory of the current script
        script_dir = Path(__file__).parent.resolve()
        # Get directory of the web_client (resolve symlinks)
        web_client_dir = (script_dir / "web_client").resolve()

        # Check if the web_client directory exists
        if not web_client_dir.is_dir():
            print(
                f"Error: Web client directory not found at '{web_client_dir}'",
                file=sys.stderr,
            )
            sys.exit(1)

        sys.path.insert(0, str(web_client_dir))

        # Change the current working directory to the web_client directory.
        # This is crucial for FastAPI/Uvicorn to find relative paths for static
        # files ('frontend/') and SSL certificates.
        os.chdir(web_client_dir)

        # Define paths for SSL certificates
        keyfile_path = "key.pem"
        certfile_path = "cert.pem"

        # Check if SSL certificates exist
        if not (Path(keyfile_path).exists() and Path(certfile_path).exists()):
            print("\n" + "=" * 80)
            print("WARNING: SSL certificates (key.pem, cert.pem) not found.")
            print(
                "Microphone access will not work when accessing from another machine."
            )
            print(
                "To enable microphone over the network, generate certificates by running"
            )
            print(f"the following command in the '{web_client_dir}' directory:")
            print(
                '\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 -days 365 -nodes -subj "/CN=localhost"\n'
            )
            print("=" * 80 + "\n")

            # Run without HTTPS
            ssl_keyfile = None
            ssl_certfile = None
            protocol = "http"
        else:
            # Run with HTTPS
            ssl_keyfile = keyfile_path
            ssl_certfile = certfile_path
            protocol = "https"

        print("Starting tiny web client server...")

        access_host = "localhost" if args.host == "0.0.0.0" else args.host
        print(
            f"Access it at: {protocol}://{access_host}:{args.port} if you are running it on your machine or {protocol}://<IP_ADDRESS_OF_THE_ROBOT>:{args.port} if you have run it on the robot."
        )

        # run the uvicorn server
        uvicorn.run(
            "main:app",
            host=args.host,
            port=args.port,
            ssl_keyfile=ssl_keyfile,
            ssl_certfile=ssl_certfile,
            log_level="info",
        )

    except KeyboardInterrupt:
        print("\nTiny web client server stopped.")
    except Exception as e:
        print(f"\nAn error occurred: {e}", file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    main()
